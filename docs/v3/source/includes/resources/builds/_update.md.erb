### Update a build

```
Example Request
```

```shell
curl "https://api.example.org/v3/builds/[guid]" \
  -X PATCH \
  -H "Authorization: bearer [token]" \
  -H "Content-Type: application/json" \
  -d '{ "metadata": { "labels": { "key": "value" }, "annotations": {"note": "detailed information"}}}'

```

```
Example Response
```

```http
HTTP/1.1 200 OK
Content-Type: application/json

<%= yield_content :single_staged_build, labels: { "key" => "value" }, "annotations": {"note" => "detailed information"} %>
```

#### Definition
`PATCH /v3/builds/:guid`

#### Optional parameters

Name | Type | Description
---- | ---- | -----------
**metadata.labels** | [_label object_](#labels) | Labels applied to the build.
**metadata.annotations**  | [_annotation object_](#annotations) | Annotations applied to the build.
**state** _(experimental)_ | _string_ | Build status (FAILED, STAGED). **
**lifecycle.data.image** _(experimental)_ | _string_ | Image reference tag where the built complete image was stored. **

#### Permitted roles
 |
--- | ---
Admin |
Space Developer |

#### Special Permitted roles **
 |
--- | ---
Admin |
Space Developer |
Build State Updater |
